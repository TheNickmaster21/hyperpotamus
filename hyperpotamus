#!/usr/bin/env node
var hyperpotamus = require("./lib");
var querystring = require("querystring");
var _ = require("underscore");
var csv = require("fast-csv");
var fs = require("fs");

var args = require("yargs")
	.usage("Run a hyperpotamus script (http://github.com/pmarkert/hyperpotamus)\nUsage: $0")
	.example("$0 -f", "Executes the given script")
	.example("$0 -f filename.yml -e 'Name was <%first%>", "Executes the script, and interpolates the output string")
	.demand("file")
	.alias("file", "f")
	.describe("file", "YAML script to execute")
	.alias("echo", "e")
	.describe("echo", "Echoes the formatted string after the session")
	.describe("qs", "Initial session state from querystring encoded value")
	.describe("csv", "Loads input data from a csv file (headers on the first line")
	.count("verbose")
	.alias("verbose","v")
	.describe("output", "Output file of emitted content")
	.alias("out","output")
	.alias("o","output")
.argv;

var session = {};
if(args.qs) {
	session = querystring.parse(args.qs);
}

var outfile;
if(args.output) {
	outfile = fs.createWriteStream(args.output);
}

hyperpotamus.load.yaml.file(args.file, function(err, script) {
	if(err) { 
		console.log(err); 
		process.exit(1) 
	};
	script = hyperpotamus.normalize(script); // Pre-normalize script if we run it in a loop

	if(args.csv) {
		csv.fromPath(args.csv, { headers : true }).on("data", function(user) {
			user = _.defaults(user, session);
			hyperpotamus.process(script, user, callbacks);
		});
	}
	else {
		hyperpotamus.process(script, session, callbacks);
	}
});

var callbacks = {
	done : function(err, session) {
		if(err) {
			console.error("Error - " + err);
			process.exit(1);
		}
		if(args.verbose)
			console.log("Final session data is " + JSON.stringify(session));
		if(args.echo)
			console.log(hyperpotamus.interpolate(args.echo, session));
	},

	before_request : function(request) {
		if(args.verbose) console.log("Requesting - " + request.url);
	},

	after_validate : function(step, err, jump_to_key) {
		if(args.verbose) console.log("After validation - " + jump_to_key);
	},

	emit : function(message) {
		if(outfile) 
			outfile.write(message + "\n");
		else
			console.log(message);
	}
}
